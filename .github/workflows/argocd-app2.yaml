name: Deploy via ArgoCD

on:
  push:
    branches: [main]

env:
  APP_NAME: argocd-app2
  DOCKER_REPO: faizul56/argocd-app2
  IMAGE_PATH: manifests/deployment.yaml

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout app repo
        uses: actions/checkout@v3

      - name: Install Docker & jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Get short commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push Docker image
        run: |
          docker build -t $DOCKER_REPO:${{ steps.vars.outputs.sha_short }} .
          docker push $DOCKER_REPO:${{ steps.vars.outputs.sha_short }}

      - name: Clone GitOps repo and update image tag
        run: |
          git clone https://x-access-token:${{ secrets.GIT_PAT }}@github.com/faizulkhan56/argocd-app2.git
          cd argocd-app2
          
          # Switch to branch or create if missing
          git checkout ci-artifacts || git checkout -b ci-artifacts

          # Pull latest changes (avoid non-fast-forward errors)
          git pull --rebase origin ci-artifacts || echo "No rebase needed"

          # Update image tag
          sed -i "s|image: .*|image: $DOCKER_REPO:${{ steps.vars.outputs.sha_short }}|" $IMAGE_PATH

          # Commit & push
          git config user.name "ci-bot"
          git config user.email "ci@github.com"
          git add $IMAGE_PATH
          git commit -m "Update image tag to ${{ steps.vars.outputs.sha_short }}" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GIT_PAT }}@github.com/faizulkhan56/argocd-app2.git ci-artifacts

      - name: Done
        run: echo "âœ… Deployment manifest updated and pushed to ci-artifacts branch"

