on:
  push:
    branches: [main]

env:
  APP_NAME: argocd-app2
  DOCKER_REPO: faizul56/argocd-app2
  IMAGE_PATH: manifests/deployment.yaml

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout app repo
        uses: actions/checkout@v3

      - name: Install Docker & JQ (if needed)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Get short commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push Docker image
        run: |
          docker build -t $DOCKER_REPO:${{ steps.vars.outputs.sha_short }} .
          docker push $DOCKER_REPO:${{ steps.vars.outputs.sha_short }}

      - name: Clone app repo (argocd-app2)
        run: |
          git clone https://x-access-token:${{ secrets.GIT_PAT }}@github.com/faizulkhan56/argocd-app2.git
          cd argocd-app2

      - name: Update image tag in deployment manifest
        working-directory: argocd-app2
        run: |
          sed -i "s|image: .*|image: $DOCKER_REPO:${{ steps.vars.outputs.sha_short }}|" $IMAGE_PATH

      - name: Commit and push manifest updates
        working-directory: argocd-app2
        env:
          GIT_PAT: ${{ secrets.GIT_PAT }}
        run: |
          git config user.name "ci-bot"
          git config user.email "ci@github.com"
		  git checkout -b ci-artifacts || git checkout ci-artifacts
          git add $IMAGE_PATH
          git commit -m "Update image tag to ${{ steps.vars.outputs.sha_short }}"
          git push https://x-access-token:${GIT_PAT}@github.com/faizulkhan56/argocd-app2.git HEAD:ci-artifacts
      - name: Finish Job with Expected Argo Notification
        run: |
          echo "✅ GitHub Actions pipeline completed."
          echo "✅ Argo CD will now deploy the app and notify GitHub with sync status."


